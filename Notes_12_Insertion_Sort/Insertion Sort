Insertion Sort:-

sort till index 1
sort till index 2
sort till index 3
.
.
.
sort till index n

for every index : put that index element at the correct index of LHS.

                5 3 4 1 2
After 1st pass: 3 5 4 1 2
After 2nd pass: 3 4 5 1 2
After 3rd pass: 1 3 4 5 2
After 4th pass: 1 2 3 4 5

------------------------------------------------------
for(int i = 0; i < n - 1; i++){
    for(int j = i+1; j > 0; j--){
        if(array[j] < array[j-1]){
            int temp = array[j];
            array[j] = array[j-1];
            array[j-1] = temp;
        }else{ // left hand side array already sorted
            break;
        }
    }
}
--------------------------------------------------------

Time Complexity: 
            worst case : O(N*N)
        (descending sorted)

            Best Case: O(N)

---------------------------------------------------------

--> Steps are reduced if array is sorted.
--> No. of swaps reduced as compared to bubble sort.
--> Its is stable algorithm.
--> Use for smaller values of n.
--> works well for if array is partially sorted.